# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: [3.5, 3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Update clang (MacOS)
      run: |
        brew update
        brew install llvm # llvm but with all the headers
        xcode-select --install # installs additional headers that you might be mimssing.
        echo 'export PATH="/usr/local/opt/llvm/bin:$PATH"' >> ~/.bash_profile # exports the custom llvm path into the shell 
        sudo ln -s /usr/local/opt/llvm/bin/clang++ /usr/local/bin/clang++-brew # optional but I like to have a symlink set.
      if: matrix.os == 'macos-latest'
    - name: Update gcc (MacOS)
      run: |
        sudo apt install software-properties-common
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt install gcc-9 g++-9
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90 --slave /usr/bin/g++ g++ /usr/bin/g++-9 --slave /usr/bin/gcov gcov /usr/bin/gcov-9
      if: matrix.os == 'ubuntu-latest'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python setup.py develop
    - name: Lint with pylint
      run: |
          pip install pylint
          pylint --exit-zero tame
    - name: Run test suite
      run: |
          pip install pytest
          pytest
    - name: Run test suite, with coverage
      run: |
          pip install pytest-cov
          pytest --cov=tame --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
          file: ./coverage.xml
          flags: unittests
          #env_vars: OS,PYTHON
          name: codecov-umbrella
